// Mocks generated by Mockito 5.2.0 from annotations
// in erp_employee_app/test/features/attendance/domain/providers/attendance_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:erp_employee_app/core/data/api/api.dart' as _i2;
import 'package:erp_employee_app/core/data/api/api_request.dart' as _i9;
import 'package:erp_employee_app/core/data/entities/duration_limits/duration_limits.dart'
    as _i5;
import 'package:erp_employee_app/core/data/entities/provider_state/pagination_filter.dart'
    as _i8;
import 'package:erp_employee_app/core/data/models/paginated_response/paginated_response.dart'
    as _i4;
import 'package:erp_employee_app/features/attendance/data/models/attendance.dart'
    as _i3;
import 'package:erp_employee_app/features/attendance/domain/repository/attendance_repository.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeApi_0<T> extends _i1.Fake implements _i2.Api<T> {}

class _FakeAttendance_1 extends _i1.Fake implements _i3.Attendance {}

class _FakePaginatedResponse_2<Model> extends _i1.Fake
    implements _i4.PaginatedResponse<Model> {}

class _FakeDurationLimits_3 extends _i1.Fake implements _i5.DurationLimits {}

/// A class which mocks [AttendanceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAttendanceRepository extends _i1.Mock
    implements _i6.AttendanceRepository {
  MockAttendanceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Api<dynamic> get api => (super.noSuchMethod(Invocation.getter(#api),
      returnValue: _FakeApi_0<dynamic>()) as _i2.Api<dynamic>);
  @override
  _i7.Future<_i3.Attendance?> findLast() =>
      (super.noSuchMethod(Invocation.method(#findLast, []),
              returnValue: Future<_i3.Attendance?>.value())
          as _i7.Future<_i3.Attendance?>);
  @override
  _i7.Future<_i3.Attendance> attend() =>
      (super.noSuchMethod(Invocation.method(#attend, []),
              returnValue: Future<_i3.Attendance>.value(_FakeAttendance_1()))
          as _i7.Future<_i3.Attendance>);
  @override
  _i7.Future<_i3.Attendance> leave() =>
      (super.noSuchMethod(Invocation.method(#leave, []),
              returnValue: Future<_i3.Attendance>.value(_FakeAttendance_1()))
          as _i7.Future<_i3.Attendance>);
  @override
  _i7.Future<_i4.PaginatedResponse<_i3.Attendance>> findAll(
          _i8.PaginationFilter? paginationFields,
          _i9.FromJson<_i3.Attendance>? fromJson) =>
      (super.noSuchMethod(
              Invocation.method(#findAll, [paginationFields, fromJson]),
              returnValue: Future<_i4.PaginatedResponse<_i3.Attendance>>.value(
                  _FakePaginatedResponse_2<_i3.Attendance>()))
          as _i7.Future<_i4.PaginatedResponse<_i3.Attendance>>);
  @override
  _i7.Future<_i5.DurationLimits> findDurationLimits() =>
      (super.noSuchMethod(Invocation.method(#findDurationLimits, []),
              returnValue:
                  Future<_i5.DurationLimits>.value(_FakeDurationLimits_3()))
          as _i7.Future<_i5.DurationLimits>);
}
